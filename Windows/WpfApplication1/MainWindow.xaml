<Window x:Class="WpfApplication1.MainWindow" x:Name="This"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:WpfApplication1"
        Title="MainWindow" Height="800" Width="600"
        Loaded="Window_Loaded">

    <Window.Resources>
        <local:ErrorsToMessageConverter x:Key="eToMConverter" />
        <local:NotConverter x:Key="NotConverter" />
        <local:BinaryByteBufferToAsciiStringConverter x:Key="BinaryByteBufferToAsciiStringConverter" />
        <local:BinaryByteBufferToHexStringConverter x:Key="BinaryByteBufferToHexStringConverter" />
        <local:PingTextConverter x:Key="PingTextConverter" />
        <local:PingTextMultiValueConverter x:Key="PingTextMultiValueConverter" />
        <local:BooleanToIOConverter x:Key="BooleanToIOCOnverter" />
        <local:ChangedToColorConverter x:Key="ChangedToColorConverter"/>
    </Window.Resources>

    <!--Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext-->
    <Grid Name="OuterGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Name="InnerGrid" Grid.Column="0" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <GridSplitter HorizontalAlignment="Left" VerticalAlignment="Stretch" Grid.Column="1" Grid.Row="1" ResizeBehavior="PreviousAndNext" Width="5" Background="#FFBCBCBC"/>
            <GridSplitter HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.Column="3" Grid.Row="1" ResizeBehavior="PreviousAndNext" Width="5" Background="#FFBCBCBC"/>
            <Border Grid.Row="0" Grid.Column="0"  Background="GhostWhite" BorderBrush="Silver" BorderThickness="2" CornerRadius="3,3,3,3">
                <TextBlock FontSize="32">Connection</TextBlock>
            </Border>
            <Border Grid.Row="0" Grid.Column="2" Background="GhostWhite" BorderBrush="Silver" BorderThickness="2" CornerRadius="3,3,3,3">
                <StackPanel Orientation="Horizontal">
                    <TextBlock  FontSize="32">IO Values</TextBlock>
                    <Button Height="40" Width="40" HorizontalAlignment="Right" Margin="3,3,3,3" Name="ButtonGetConfig" VerticalAlignment="Top" Click="ButtonGetConfig_Click">              
                        <Image Source="application-import.png" />
                    </Button>
                </StackPanel>

            </Border>
            <Border Grid.Row="0" Grid.Column="4" Background="GhostWhite" BorderBrush="Silver" BorderThickness="2" CornerRadius="3,3,3,3">
                <StackPanel Orientation="Horizontal">
                    <TextBlock  FontSize="32">Messages</TextBlock>
                    <Button Height="40" Width="40" HorizontalAlignment="Right" Margin="3,3,3,3" Name="ButtonDelete" VerticalAlignment="Top" Click="ButtonDelete_Click">
                        <Image Source="broom.png" />
                    </Button>
                </StackPanel>
            </Border>
            <Border Grid.Row="1" Grid.Column="4" Background="GhostWhite" BorderBrush="Silver" BorderThickness="2" CornerRadius="3,3,3,3">
                <StackPanel Orientation="Vertical">
                    <Border Background="GhostWhite" BorderBrush="Silver" BorderThickness="2" CornerRadius="3,3,3,3" Margin="2,2,2,2">
                        <StackPanel Orientation="Vertical">
                            <TextBlock FontSize="11">Received (ASCII)</TextBlock>
                                <TextBlock Name="receivedMessageAsciiTextBox" FontSize="11"  
                                     Height="100"
                                     TextWrapping="Wrap"
                                     Text="{Binding ElementName=This, Path=ReceiveBuffer, Converter={StaticResource BinaryByteBufferToAsciiStringConverter}}"/>

                                <TextBlock FontSize="11">Received (Hex)</TextBlock>
                            <TextBlock Name="receivedMessageHexadecimalTextBox" FontSize="11"  
                                     Height="200"
                                     TextWrapping="Wrap"
                                     Text="{Binding ElementName=This, Path=ReceiveBuffer, Converter={StaticResource BinaryByteBufferToHexStringConverter}}"/>
                        </StackPanel>
                    </Border>
                    <Border Background="GhostWhite" BorderBrush="Silver" BorderThickness="2" CornerRadius="3,3,3,3" Margin="2,2,2,2">
                        <StackPanel Orientation="Vertical">
                            <TextBlock FontSize="11" Margin="2,2,2,2">Send message</TextBlock>
                            <RadioButton GroupName="dataMode" Content="ASCII" IsChecked="True" Margin="2,2,2,2"/>
                            <RadioButton GroupName="dataMode" Content="Hexadecimal" Margin="2,2,2,2"/>
                            <TextBlock Name="sentMessageHistoryTextBox" FontSize="11"  
                                     Height="200"
                                     TextWrapping="Wrap"
                                     Text="{Binding ElementName=This, Path=SentBuffer, Converter={StaticResource BinaryByteBufferToHexStringConverter}}"/>
                            <TextBox Name="sendMessageTextBox" FontSize="11" Background="LightYellow">
                                <TextBox.Text>
                                    <Binding ElementName="This" Path="SendString" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay"/>
                                </TextBox.Text>
                            </TextBox>
                            <Button Name="SendButton" Width="150" Click="SendButton_Click">Send</Button>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Border>

            <ScrollViewer Grid.Row="1" Grid.Column="2" VerticalScrollBarVisibility="Auto">
            <Border Background="GhostWhite" BorderBrush="Silver" BorderThickness="2" CornerRadius="3,3,3,3">
                <ItemsControl Name="icInputOutputList" AlternationCount="2">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                            <Grid x:Name="FooBar">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Pin}" />
                            <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding Name}"/>
                            <TextBlock Grid.Column="2" Grid.Row="0" Text="{Binding Mode, Converter={StaticResource BooleanToIOCOnverter}}"/>
                                <Border Grid.Column="2" Grid.Row="1" Background="{Binding Changed, Converter={StaticResource ChangedToColorConverter}}">
                                    <Image Width="16">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsHigh}" Value="False">
                                                        <Setter Property="Source" Value="pack://application:,,/arrow-270.png"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsHigh}" Value="True">
                                                        <Setter Property="Source" Value="pack://application:,,/arrow-090.png"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Border>
                            </Grid>
                        <DataTemplate.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="Background" Value="LightGray" TargetName="FooBar"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="AliceBlue" TargetName="FooBar"/>
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            </Border>
        </ScrollViewer>
            <Border Grid.Row="1" Grid.Column="0" Background="GhostWhite" BorderBrush="Silver" BorderThickness="2" CornerRadius="3,3,3,3">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Margin="10,2,2,2">Arduino IP v4 Adress</TextBlock>
                        <TextBox x:Name="AddressBox" IsEnabled="{Binding ElementName=checkBoxFetchData, Converter={StaticResource NotConverter}, Path=IsChecked}">
                            <TextBox.Text>
                                <Binding ElementName="This" Path="IPAddress" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <local:IPValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock Foreground="Red" FontWeight="Bold" Text="{Binding ElementName=AddressBox, Path=(Validation.Errors), Converter={StaticResource eToMConverter}}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsEnabled="{Binding ElementName=checkBoxFetchData, Converter={StaticResource NotConverter}, Path=IsChecked}">
                        <TextBlock Name="RemotePort">port</TextBlock>
                        <TextBox>
                            <TextBox.Text>
                                <Binding ElementName="This" Path="Port" UpdateSourceTrigger="PropertyChanged"/>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <CheckBox Content="Ping Arduino =>">
                                <CheckBox.IsChecked>
                                    <Binding ElementName="This" Path="IsPingActive" UpdateSourceTrigger="PropertyChanged"/>
                                </CheckBox.IsChecked>
                            </CheckBox>
                            <TextBlock>
                                <TextBlock.Text>
                                    <Binding ElementName="This" Converter="{StaticResource PingTextConverter}" Path="PingResult"/>
                                </TextBlock.Text>
                            </TextBlock>
                            <!--TextBlock>
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource PingTextMultiValueConverter}">
                                    <Binding Path="This.IsPingActive"/>
                                    <Binding Path="This.PingResult"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock-->
                        </StackPanel>
                        <CheckBox Content="Alive Message" Name="checkAliveMessage">
                            <CheckBox.IsChecked>
                                <Binding ElementName="This" Path="IsAliveActive" UpdateSourceTrigger="PropertyChanged"></Binding>
                            </CheckBox.IsChecked>
                        </CheckBox>
                        <CheckBox Content="Fetch IO Data" Name="checkBoxFetchData">
                            <CheckBox.IsChecked>
                                <Binding ElementName="This" Path="IsFetchingIsActive" UpdateSourceTrigger="PropertyChanged"></Binding>
                            </CheckBox.IsChecked>
                        </CheckBox>

                        <Rectangle VerticalAlignment="Stretch" Width="1" Margin="2" Stroke="Black" />
                        <StackPanel Orientation="Horizontal">
                            <TextBlock>  Interval [ms]</TextBlock>
                            <TextBox Margin="10,0,0,0" IsEnabled="{Binding ElementName=checkBoxFetchData, Converter={StaticResource NotConverter}, Path=IsChecked}">
                                <TextBox.Text>
                                    <Binding ElementName="This" Path="Interval" UpdateSourceTrigger="PropertyChanged"/>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>

                    </StackPanel>

                </StackPanel>
            </Border>
        </Grid>
        <Border  Grid.Row="1" Grid.Column="0" Width="620" Height="220" Background="GhostWhite" BorderBrush="Silver" BorderThickness="2" CornerRadius="3,3,3,3">
            <Canvas Name="canGraph" Background="White" Width="600"  Height="200"/>
        </Border>
    </Grid>

</Window>
